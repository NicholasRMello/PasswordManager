FROM php:8.2-fpm-alpine

# Instalar depend√™ncias do sistema
RUN apk add --no-cache \
    git \
    curl \
    libpng-dev \
    libxml2-dev \
    zip \
    unzip \
    nodejs \
    npm \
    mysql-client \
    oniguruma-dev \
    freetype-dev \
    libjpeg-turbo-dev \
    libwebp-dev \
    libxpm-dev

# Configurar extens√£o GD
RUN docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp --with-xpm

# Instalar extens√µes PHP
RUN docker-php-ext-install pdo pdo_mysql mbstring exif pcntl bcmath gd

# Instalar Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Definir diret√≥rio de trabalho
WORKDIR /var/www

# Copiar arquivos do projeto
COPY . /var/www

# Instalar depend√™ncias PHP
RUN composer install --optimize-autoloader --no-dev

# Instalar depend√™ncias Node.js
RUN npm install
RUN npm run build

# Configurar permiss√µes
RUN chown -R www-data:www-data /var/www
RUN chmod -R 755 /var/www/storage
RUN chmod -R 755 /var/www/bootstrap/cache

# Script de inicializa√ß√£o personalizado
RUN echo '#!/bin/sh' > /var/www/docker-start.sh && \
    echo 'echo "üöÄ Iniciando aplica√ß√£o Laravel..."' >> /var/www/docker-start.sh && \
    echo '' >> /var/www/docker-start.sh && \
    echo '# Aguardar um pouco para o MySQL estar dispon√≠vel' >> /var/www/docker-start.sh && \
    echo 'echo "‚è≥ Aguardando MySQL inicializar..."' >> /var/www/docker-start.sh && \
    echo 'sleep 10' >> /var/www/docker-start.sh && \
    echo 'echo "‚úÖ Prosseguindo com a inicializa√ß√£o..."' >> /var/www/docker-start.sh && \
    echo '' >> /var/www/docker-start.sh && \
    echo '# Configurar vari√°veis de ambiente' >> /var/www/docker-start.sh && \
    echo 'export DB_CONNECTION=mysql' >> /var/www/docker-start.sh && \
    echo '# Vari√°veis j√° definidas pelo Railway' >> /var/www/docker-start.sh && \
    echo 'export LOG_CHANNEL=stderr' >> /var/www/docker-start.sh && \
    echo 'export APP_DEBUG=true' >> /var/www/docker-start.sh && \
    echo '' >> /var/www/docker-start.sh && \
    echo '# Debug das vari√°veis' >> /var/www/docker-start.sh && \
    echo 'echo "üîç Vari√°veis de ambiente:"' >> /var/www/docker-start.sh && \
    echo 'echo "DB_HOST: $DB_HOST"' >> /var/www/docker-start.sh && \
    echo 'echo "DB_PORT: $DB_PORT"' >> /var/www/docker-start.sh && \
    echo 'echo "DB_DATABASE: $DB_DATABASE"' >> /var/www/docker-start.sh && \
    echo 'echo "DB_USERNAME: $DB_USERNAME"' >> /var/www/docker-start.sh && \
    echo '' >> /var/www/docker-start.sh && \
    echo '# Limpar cache' >> /var/www/docker-start.sh && \
    echo 'php artisan config:clear' >> /var/www/docker-start.sh && \
    echo 'php artisan cache:clear' >> /var/www/docker-start.sh && \
    echo 'php artisan view:clear' >> /var/www/docker-start.sh && \
    echo '' >> /var/www/docker-start.sh && \
    echo '# Executar migrations' >> /var/www/docker-start.sh && \
    echo 'echo "üìä Executando migrations..."' >> /var/www/docker-start.sh && \
    echo 'php artisan migrate --force' >> /var/www/docker-start.sh && \
    echo '' >> /var/www/docker-start.sh && \
    echo '# Otimizar aplica√ß√£o' >> /var/www/docker-start.sh && \
    echo 'php artisan config:cache' >> /var/www/docker-start.sh && \
    echo 'php artisan route:cache' >> /var/www/docker-start.sh && \
    echo 'php artisan view:cache' >> /var/www/docker-start.sh && \
    echo '' >> /var/www/docker-start.sh && \
    echo '# Iniciar servidor' >> /var/www/docker-start.sh && \
    echo 'echo "üåê Iniciando servidor na porta $PORT..."' >> /var/www/docker-start.sh && \
    echo 'php artisan serve --host=0.0.0.0 --port=$PORT' >> /var/www/docker-start.sh && \
    chmod +x /var/www/docker-start.sh

# Expor porta
EXPOSE 8000

# Comando de inicializa√ß√£o
CMD ["/var/www/docker-start.sh"]